name: Create GitHub Release

on:
  push:
    branches:
      - stable

jobs:
  release:
    name: üöÄ GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch all history for changelog generation

      - name: üß∞ Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üè∑Ô∏è Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep -m 1 '^version = ' pyproject.toml | sed -E 's/version = "(.*)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ Version: $VERSION"

      - name: üîç Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.get_version.outputs.VERSION }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è  Tag v${{ steps.get_version.outputs.VERSION }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "‚úÖ Tag v${{ steps.get_version.outputs.VERSION }} does not exist"
          fi

      - name: üìù Generate Changelog
        if: steps.check_tag.outputs.exists == 'false'
        id: changelog
        run: |
          # Get the latest tag, or use initial commit if no tags exist
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)
          echo "Generating changelog from $LATEST_TAG to HEAD"

          {
            echo "CHANGELOG<<EOF"
            echo "## What's Changed"
            echo ""
            git log --pretty=format:"* %s (%h)" --no-merges $LATEST_TAG..HEAD
            echo ""
            echo ""
            echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$LATEST_TAG...v${{ steps.get_version.outputs.VERSION }}"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: üöÄ Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: Release v${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚è≠Ô∏è Skip Release
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "::notice::Release v${{ steps.get_version.outputs.VERSION }} already exists. Skipping release creation."
